\Wmods
\:\WX{\M{143}}Absorb limbo text\X \X
\WU section~\M{136}.

\:\WX{\M{94}}Absorb optional kind-param\X \X
\WU section~\M{93}.

\:\WX{\M{217}}Add an operator to the table, if necessary, and \WCD{\&{return} %
\|p}\X \X
\WU section~\M{216}.

\:\WX{\M{44}, \M{51}, \M{153}, \M{195}, \M{202}, \M{240}, \M{328}}Allocate
dynamic memory\X \X
\WU section~\M{38}.

\:\WX{\M{280}}Append \.{\\WP}\X \X
\WU sections~\M{284} and~\M{299}.

\:\WX{\M{225}}Append a \TeX\ string scrap\X \X
\WU section~\M{207}.

\:\WX{\M{233}}Append a comment or compiler directive\X \X
\WU section~\M{232}.

\:\WX{\M{310}}Append a module name\X \X
\WU sections~\M{207} and~\M{309}.

\:\WX{\M{235}}Append a regular comment\X \X
\WU section~\M{233}.

\:\WX{\M{219}}Append a string or constant\X \X
\WU section~\M{207}.

\:\WX{\M{199}}Append a verbatim scrap\X \X
\WU section~\M{198}.

\:\WX{\M{227}}Append an identifier scrap\X \X
\WU section~\M{207}.

\:\WX{\M{296}}Append an operator name\X \X
\WU section~\M{295}.

\:\WX{\M{289}}Append argument of \WEB\ macro\X \X
\WU section~\M{287}.

\:\WX{\M{220}}Append commands for beginning of string\X \X
\WU sections~\M{219}, \M{293}, \M{295}, \M{296}, and~\M{297}.

\:\WX{\M{185}}Append comment text\X \X
\WU section~\M{183}.

\:\WX{\M{215}}Append scraps for \WCD{ \>{begin\_language}}\X \X
\WU section~\M{207}.

\:\WX{\M{221}}Append the basic string\X \X
\WU sections~\M{219}, \M{295}, and~\M{297}.

\:\WX{\M{230}}Append the output file name\X \X
\WU section~\M{207}.

\:\WX{\M{207}}Append the scrap appropriate to \WCD{ \>{next\_control}}\X \X
\WU section~\M{198}.

\:\WX{\M{301}}Append the scrap header for code\X \X
\WU section~\M{299}.

\:\WX{\M{300}}Append the scrap header for the definition part\X \X
\WU section~\M{284}.

\:\WX{\M{234}}Begin a compiler directive\X \X
\WU section~\M{233}.

\:\WX{\M{121}}Build the \.{-I} options into \WCD{ \>{temp\_I}}\X \X
\WU section~\M{120}.

\:\WX{\M{87}}Cases for \.{\#\#}, \.{\#!}, \.{\#:}, \.{\#.}, and~\.{\#<}\X \X
\WU section~\M{85}.

\:\WX{\M{86}}Cases for \.{\slashstar}, \.{//}, \.{/)}, and~\.{/=}\X \X
\WU section~\M{85}.

\:\WX{\M{249}}Cases for turning output on or off\X \X
\WU section~\M{247}.

\:\WX{\M{209}}Cases involving nonstandard ASCII characters\X \X
\WU section~\M{207}.

\:\WX{\M{214}}Cases involving single ASCII characters\X \X
\WU section~\M{207}.

\:\WX{\M{211}}Cases involving special \WEB\ commands\X \X
\WU section~\M{207}.

\:\WX{\M{62}}Cases to set \WCD{ \>{language}} and \WCD{ \&{break}}\X \X
\WU sections~\M{64}, \M{168}, and~\M{276}.

\:\WX{\M{140}}Change a category code\X \X
\WU section~\M{137}.

\:\WX{\M{187}}Check for a null \TeX\ comment\X \X
\WU section~\M{186}.

\:\WX{\M{101}}Check for boz constant\X \X
\WU section~\M{96}.

\:\WX{\M{98}}Check for continued string\X \X
\WU section~\M{96}.

\:\WX{\M{213}}Check for end of meta-comment and \WCD{\&{goto} \>{done\_meta}}
if necessary\X \X
\WU section~\M{212}.

\:\WX{\M{81}}Check if next token is \WCD{ \>{include}} or \WCD{ \>{pragma}}\X \X
\WU section~\M{80}.

\:\WX{\M{83}}Check if we're at the end of a preprocessor command\X \X
\WU section~\M{67}.

\:\WX{\M{82}}Check if we're at the id part of a preprocessor command\X \X
\WU section~\M{67}.

\:\WX{\M{303}}Check that \WCD{ $=$} or \WCD{ $\WS$} follows this module name,
and emit the scraps to start the module definition\X \X
\WU section~\M{299}.

\:\WX{\M{189}}Clear \WCD{ \>{bal}} and \WCD{ \&{break}}\X \X
\WU sections~\M{184}, \M{186}, and~\M{188}.

\:\WX{\M{262}}Code to output a module name\X \X
\WU sections~\M{260} and~\M{261}.

\:\WX{\M{72}}Compress string of blanks into one; if any found, return \WCD{ %
\>{macro\_space}}\X \X
\WU section~\M{71}.

\:\WX{\M{85}}Compress two-symbol operator\X \X
\WU section~\M{77}.

\:\WX{\M{184}}Continue comment if necessary\X \X
\WU section~\M{183}.

\:\WX{\M{92}}Copy Hollerith constant\X \X
\WU section~\M{90}.

\:\WX{\M{267}}Copy a control code into the buffer\X \X
\WU section~\M{266}.

\:\WX{\M{188}}Copy special things when \WCD{ $\|c\WS\.{'@'},\ \.{'\\\\'},\ \.{'%
\{'},\ \.{'\}'}$}\X \X
\WU section~\M{183}.

\:\WX{\M{266}}Copy the \cee\ text into the \WCD{ \>{cur\_buffer}} array\X \X
\WU section~\M{264}.

\:\WX{\M{120}}Create a command to run the preprocessor, then execute it\X \X
\WU section~\M{119}.

\:\WX{\M{170}}Define to \TeX\ an overloaded operator\X \X
\WU section~\M{169}.

\:\WX{\M{122}}Deflect the input file to be \.{temp\_out}\X \X
\WU section~\M{119}.

\:\WX{\M{181}}Delete run of spaces between beginning of line and present
position\X \X
\WU section~\M{180}.

\:\WX{\M{97}}Determine the right matching delimiter\X \X
\WU section~\M{96}.

\:\WX{\M{329}}Do the first pass of sorting\X \X
\WU section~\M{347}.

\:\WX{\M{309}}Emit the scrap for a module name if present\X \X
\WU sections~\M{231} and~\M{299}.

\:\WX{\M{47}}Execute an implicit \.{@f}\X \X
\WU section~\M{46}.

\:\WX{\M{104}}Finish VAX hex/octal constant.\X \X
\WU section~\M{103}.

\:\WX{\M{292}}Finish appending format definition\X \X
\WU sections~\M{291} and~\M{293}.

\:\WX{\M{186}}Finish comment and \WCD{ \&{break}}\X \X
\WU sections~\M{183} and~\M{184}.

\:\WX{\M{320}}Finish off \WCD{ \>{phase3}\WIN2{319}}\X \X
\WU section~\M{319}.

\:\WX{\M{293}}Format a category code\X \X
\WU section~\M{290}.

\:\WX{\M{291}}Format an identifier or module name\X \X
\WU section~\M{290}.

\:\WX{\M{253}}Format and output an identifier\X \X
\WU section~\M{252}.

\:\WX{\M{288}}Format auto insertion\X \X
\WU section~\M{287}.

\:\WX{\M{139}}Format the left-hand side\X \X
\WU sections~\M{47} and~\M{138}.

\:\WX{\M{75}}Get \TeX\ identifier\X \X
\WU section~\M{74}.

\:\WX{\M{76}}Get \TeX\ string\X \X
\WU section~\M{74}.

\:\WX{\M{88}}Get a constant\X \X
\WU section~\M{77}.

\:\WX{\M{90}}Get a decimal or Hollerith constant\X \X
\WU section~\M{88}.

\:\WX{\M{78}}Get a dot constant\X \X
\WU section~\M{77}.

\:\WX{\M{29}}Get an identifier\X \X
\WU section~\M{77}.

\:\WX{\M{89}}Get an octal, hex, or binary constant\X \X
\WU section~\M{88}.

\:\WX{\M{68}}Get another line of input if necessary\X \X
\WU section~\M{67}.

\:\WX{\M{71}}Get next character; skip blanks and tabs\X \X
\WU section~\M{67}.

\:\WX{\M{91}}Get the exponent field\X \X
\WU section~\M{90}.

\:\WX{\M{33}, \M{346}, \M{334}, \M{332}, \M{327}, \M{325}, \M{314}, \M{298}, %
\M{277}, \M{274}, \M{271}, \M{244}, \M{239}, \M{226}, \M{210}, \M{206}, %
\M{201}, \M{197}, \M{191}, \M{182}, \M{174}, \M{157}, \M{152}, \M{148}, %
\M{146}, \M{135}, \M{118}, \M{113}, \M{105}, \M{95}, \M{84}, \M{66}, \M{58}, %
\M{50}, \M{43}, \M{41}}Global variables\X \X
\WU section~\M{1}.

\:\WX{\M{103}}Handle VAX extensions of hex or octal constants\X \X
\WU section~\M{101}.

\:\WX{\M{133}}Handle a comment\X \X
\WU sections~\M{128} and~\M{132}.

\:\WX{\M{131}}Handle a possible language switch in the middle of the module\X \X
\WU section~\M{116}.

\:\WX{\M{102}}Handle boz constant\X \X
\WU section~\M{101}.

\:\WX{\M{99}}Handle left-hand delimiter\X \X
\WU section~\M{96}.

\:\WX{\M{110}}If end of name, \WCD{ \&{break}}\X \X
\WU section~\M{109}.

\:\WX{\M{34}, \M{356}}Include files\X \X
\WU section~\M{1}.

\:\WX{\M{204}}Initialize compound assignment operators\X \X
\WU section~\M{202}.

\:\WX{\M{203}}Initialize ordinary operators\X \X
\WU section~\M{202}.

\:\WX{\M{24}}Initialize \WCD{ \>{mod\_info}} and \WCD{ \>{Language}}\X \X
\WU section~\M{55}.

\:\WX{\M{53}}Initialize \WCD{ \>{tok\_ptr}}, \WCD{ \>{tok\_start}}, and \WCD{ %
\>{text\_ptr}}\X \X
\WU sections~\M{52} and~\M{171}.

\:\WX{\M{69}}Insert a semicolon at end of free-format \Fortran-90 line\X \X
\WU section~\M{68}.

\:\WX{\M{100}}Insert discretionary line-break commands\X \X
\WU section~\M{96}.

\:\WX{\M{344}}Invert the cross-reference list at \WCD{ \>{cur\_name}}, making %
\WCD{ \>{cur\_xref}} the head\X \X
\WU section~\M{342}.

\:\WX{\M{269}}Issue the \.{\\Wbegin} command that sets up the beginning of the
document\X \X
\WU section~\M{268}.

\:\WX{\M{307}}Kill rest of line; no \WCD{ \>{auto\_semi}}\X \X
\WU sections~\M{63} and~\M{306}.

\:\WX{\M{257}}Look ahead for strongest line break, \WCD{\&{goto} \>{reswitch}}%
\X \X
\WU section~\M{256}.

\:\WX{\M{30}}Make \WCD{ \>{id\_first}} and \WCD{ \>{id\_loc}} point to the
identifier\X \X
\WU section~\M{29}.

\:\WX{\M{130}}Mark \&{class} variable\X \X
\WU sections~\M{116} and~\M{119}.

\:\WX{\M{128}}Mark \&{typedef} variable\X \X
\WU sections~\M{116} and~\M{119}.

\:\WX{\M{306}}Maybe start column mode.\X \X
\WU sections~\M{299} and~\M{303}.

\:\WX{\M{36}}Open \.{.tex} file for reading, if it exists; check for valid
header\X \X
\WU section~\M{35}.

\:\WX{\M{224}}Other string cases\X \X
\WU sections~\M{165}, \M{222}, and~\M{324}.

\:\WX{\M{255}}Output a \.{\\math} operator\X \X
\WU section~\M{247}.

\:\WX{\M{256}}Output a control, look ahead in case of line breaks, possibly %
\WCD{\&{goto} \>{reswitch}}\X \X
\WU section~\M{247}.

\:\WX{\M{260}}Output a module name\X \X
\WU section~\M{247}.

\:\WX{\M{353}}Output all the module names\X \X
\WU section~\M{319}.

\:\WX{\M{317}}Output all the module numbers on the reference list \WCD{ \>{cur%
\_xref}}\X \X
\WU section~\M{316}.

\:\WX{\M{228}}Output an RCS-like keyword\X \X
\WU sections~\M{168} and~\M{276}.

\:\WX{\M{252}}Output an identifier\X \X
\WU section~\M{247}.

\:\WX{\M{171}}Output any limbo text definitions\X \X
\WU section~\M{168}.

\:\WX{\M{248}}Output contents of a string\X \X
\:\WX{\M{169}}Output default definitions for user-defined dot constants\X \X
\WU section~\M{168}.

\:\WX{\M{339}}Output index entries for the list at \WCD{ \>{sort\_ptr}}\X \X
\WU section~\M{337}.

\:\WX{\M{259}}Output saved \WCD{ \>{indent}} or \WCD{ \>{outdent}} tokens\X \X
\WU sections~\M{247}, \M{257}, and~\M{258}.

\:\WX{\M{258}}Output something; \WCD{ \&{goto} \>{reswitch}}\X \X
\WU section~\M{257}.

\:\WX{\M{254}}Output the appropriate identifier prefix\X \X
\WU sections~\M{253} and~\M{341}.

\:\WX{\M{273}}Output the code for the beginning of a new module\X \X
\WU section~\M{272}.

\:\WX{\M{318}}Output the code for the end of a module\X \X
\WU section~\M{272}.

\:\WX{\M{342}}Output the cross-references at \WCD{ \>{cur\_name}}\X \X
\WU section~\M{339}.

\:\WX{\M{172}}Output the end of limbo section\X \X
\WU section~\M{168}.

\:\WX{\M{275}}Output the include file name if necessary\X \X
\WU section~\M{273}.

\:\WX{\M{347}}Output the index\X \X
\WU section~\M{319}.

\:\WX{\M{341}}Output the name at \WCD{ \>{cur\_name}}\X \X
\WU section~\M{339}.

\:\WX{\M{166}}Output the overloaded translation\X \X
\WU section~\M{165}.

\:\WX{\M{264}}Output the text of the module name\X \X
\WU section~\M{262}.

\:\WX{\M{145}}Overload an identifier\X \X
\WU section~\M{136}.

\:\WX{\M{144}}Overload an operator\X \X
\WU section~\M{136}.

\:\WX{\M{2}, \M{165}, \M{164}, \M{162}, \M{160}, \M{159}, \M{158}, \M{155}, %
\M{154}, \M{150}, \M{149}, \M{142}, \M{141}, \M{137}, \M{132}, \M{129}, %
\M{124}, \M{123}, \M{119}, \M{116}, \M{114}, \M{106}, \M{96}, \M{77}, \M{74}, %
\M{67}, \M{65}, \M{64}, \M{55}, \M{54}, \M{48}, \M{46}, \M{35}}Part 1\X \X
\WU section~\M{1}.

\:\WX{\M{168}, \M{180}, \M{183}, \M{198}, \M{200}, \M{231}, \M{232}, \M{242}, %
\M{243}, \M{245}, \M{246}, \M{268}, \M{270}, \M{276}, \M{278}, \M{281}, %
\M{283}, \M{284}, \M{285}, \M{286}, \M{299}, \M{302}, \M{305}, \M{311}}Part 2\X
\X
\WU section~\M{1}.

\:\WX{\M{205}, \M{208}, \M{216}, \M{218}, \M{247}, \M{250}, \M{251}, \M{261}, %
\M{316}, \M{319}, \M{323}, \M{324}, \M{336}, \M{345}, \M{354}, \M{355}}Part 3\X
\X
\WU section~\M{1}.

\:\WX{\M{5}, \M{6}}Possibly split into parts\X \X
\WU section~\M{1}.

\:\WX{\M{93}}Post-process constant\X \X
\WU section~\M{88}.

\:\WX{\M{151}}Print error messages about unused or undefined module names, or
modules with multiple uses\X \X
\WU section~\M{114}.

\:\WX{\M{37}}Print header information to beginning of output file\X \X
\WU section~\M{35}.

\:\WX{\M{322}}Print the RCS keywords\X \X
\WU section~\M{321}.

\:\WX{\M{321}}Print the command line, etc.\X \X
\WU section~\M{319}.

\:\WX{\M{163}}Print warning message, break the line, and \WCD{ \&{return}}\X \X
\WU section~\M{162}.

\:\WX{\M{138}}Process an identifier or module name\X \X
\WU section~\M{137}.

\:\WX{\M{32}}Process possible preprocessor command\X \X
\WU sections~\M{180} and~\M{106}.

\:\WX{\M{212}}Process \WCD{ \>{begin\_meta}}\X \X
\WU section~\M{211}.

\:\WX{\M{39}}Prototypes\X \X
\WU section~\M{1}.

\:\WX{\M{109}}Put module name into \WCD{ \>{mod\_text}}\X \X
\WU section~\M{107}.

\:\WX{\M{80}}Raise preprocessor flag\X \X
\WU section~\M{77}.

\:\WX{\M{315}}Rearrange the list pointed to by \WCD{ \>{cur\_xref}}\X \X
\WU section~\M{313}.

\:\WX{\M{304}}Reset the language before translation\X \X
\WU section~\M{299}.

\:\WX{\M{331}}Rest of \WCD{ \>{trans\_plus}} union\X \X
\WU section~\M{190}.

\:\WX{\M{112}}Scan a verbatim string\X \X
\WU section~\M{106}.

\:\WX{\M{107}}Scan the module name and make \WCD{ \>{cur\_module}} point to it%
\X \X
\WU sections~\M{87} and~\M{106}.

\:\WX{\M{31}}Scan the output file name\X \X
\WU section~\M{106}.

\:\WX{\M{111}}Scan to the next \.{@>}; \WCD{ \&{return} \>{cc}}\X \X
\WU section~\M{106}.

\:\WX{\M{340}}Separate the groups if necessary\X \X
\WU section~\M{339}.

\:\WX{\M{38}, \M{45}, \M{52}, \M{59}, \M{108}, \M{156}, \M{161}, \M{196}, %
\M{241}, \M{333}, \M{335}}Set initial values\X \X
\WU section~\M{2}.

\:\WX{\M{60}}Set the changable codes\X \X
\WU section~\M{59}.

\:\WX{\M{63}}Set the \WCD{ \>{language}} and maybe kill rest of line\X \X
\WU sections~\M{62}, \M{106}, and~\M{134}.

\:\WX{\M{308}}Set up column mode\X \X
\WU sections~\M{131}, \M{147}, \M{211}, \M{213}, \M{215}, and~\M{306}.

\:\WX{\M{20}}Set \WCD{ \>{language}}\X \X
\WU section~\M{63}.

\:\WX{\M{313}}Show cross-references to this module\X \X
\WU section~\M{272}.

\:\WX{\M{117}}Skip a verbatim scrap\X \X
\WU section~\M{116}.

\:\WX{\M{70}}Skip blank lines\X \X
\WU section~\M{68}.

\:\WX{\M{265}}Skip next character, give error if not `\.{@}'\X \X
\WU section~\M{264}.

\:\WX{\M{127}}Skip over literal text\X \X
\WU section~\M{116}.

\:\WX{\M{126}}Skip over meta-comment\X \X
\WU section~\M{116}.

\:\WX{\M{73}}Skip white space at beginning of line\X \X
\WU section~\M{71}.

\:\WX{\M{337}}Sort and output the index\X \X
\WU section~\M{347}.

\:\WX{\M{223}}Special \TeX\ cases\X \X
\WU sections~\M{222} and~\M{324}.

\:\WX{\M{61}}Special control codes allowed only when debugging\X \X
\WU section~\M{60}.

\:\WX{\M{167}}Special identifier cases\X \X
\:\WX{\M{222}}Special string cases\X \X
\WU sections~\M{159}, \M{160}, \M{185}, \M{221}, and~\M{340}.

\:\WX{\M{9}}Specific language cases\X \X
\WU sections~\M{134}, \M{106}, and~\M{62}.

\:\WX{\M{338}}Split the list at \WCD{ \>{sort\_ptr}} into further lists\X \X
\WU section~\M{337}.

\:\WX{\M{312}}Start a deferred macro definition\X \X
\WU section~\M{311}.

\:\WX{\M{290}}Start a format definition\X \X
\WU section~\M{279}.

\:\WX{\M{294}}Start a limbo text definition\X \X
\WU section~\M{279}.

\:\WX{\M{287}}Start a macro definition\X \X
\WU section~\M{279}.

\:\WX{\M{297}}Start an overloaded identifier definition\X \X
\WU section~\M{279}.

\:\WX{\M{295}}Start an overloaded operator definition\X \X
\WU section~\M{279}.

\:\WX{\M{115}}Store cross-reference data for the current module\X \X
\WU section~\M{114}.

\:\WX{\M{134}}Store cross-references in the \TeX\ part of a module\X \X
\WU section~\M{115}.

\:\WX{\M{147}}Store cross-references in the \cee\ part of a module\X \X
\WU section~\M{115}.

\:\WX{\M{136}}Store cross-references in the definition part of a module\X \X
\WU section~\M{115}.

\:\WX{\M{179}}Store output switch and \.{\\Wskipped}\X \X
\WU section~\M{207}.

\:\WX{\M{177}}Store the output switch\X \X
\WU sections~\M{278}, \M{279}, and~\M{299}.

\:\WX{\M{229}}Strip white space from around RCS-like keyword\X \X
\WU sections~\M{211} and~\M{228}.

\:\WX{\M{326}}Tell about changed modules\X \X
\WU section~\M{347}.

\:\WX{\M{282}}Tidy up the end of the part\X \X
\WU section~\M{281}.

\:\WX{\M{175}}Toggle output\X \X
\WU sections~\M{116}, \M{134}, \M{207}, and~\M{251}.

\:\WX{\M{351}}Translate a control character \WCD{ \|c}\X \X
\WU sections~\M{349} and~\M{350}.

\:\WX{\M{279}}Translate a \WCD{ \>{definition}}, \WCD{ \>{formatt}}, etc.\X \X
\WU section~\M{278}.

\:\WX{\M{272}}Translate the current module\X \X
\WU section~\M{268}.

\:\WX{\M{42}, \M{49}, \M{190}, \M{238}}Typedef declarations\X \X
\WU section~\M{1}.

\:\WX{\M{125}, \M{173}}Unused\X \X
\:\WX{\M{348}}Write \.{makeindex} style file\X \X
\WU section~\M{347}.

\:\WX{\M{10}}\WCD{ \WRS{ASCII}} cases for \WCD{ \|C}\X \X
\WU section~\M{20}.

\:\WX{\M{12}}\WCD{ \WRS{ASCII}} cases for \WCD{ \WUC{FORTRAN}}\X \X
\WU section~\M{20}.

\:\WX{\M{14}}\WCD{ \WRS{ASCII}} cases for \WCD{ \WUC{LITERAL}}\X \X
\WU section~\M{20}.

\:\WX{\M{11}}\WCD{ \WRS{ASCII}} cases for \WCD{ \WUC{RATFOR}}\X \X
\WU section~\M{20}.

\:\WX{\M{13}}\WCD{ \WRS{ASCII}} cases for \WCD{ \WUC{TEX}}\X \X
\WU section~\M{20}.

\:\WX{\M{15}}\WCD{ \&{outer\_char}} cases for \WCD{ \|C}\X \X
\:\WX{\M{17}}\WCD{ \&{outer\_char}} cases for \WCD{ \WUC{FORTRAN}}\X \X
\:\WX{\M{19}}\WCD{ \&{outer\_char}} cases for \WCD{ \WUC{LITERAL}}\X \X
\:\WX{\M{16}}\WCD{ \&{outer\_char}} cases for \WCD{ \WUC{RATFOR}}\X \X
\:\WX{\M{18}}\WCD{ \&{outer\_char}} cases for \WCD{ \WUC{TEX}}\X \X

